cmake_minimum_required(VERSION 3.12 FATAL_ERROR)

project(bvestl LANGUAGES CXX)

# Find EASTL
find_file(EASTL_HEADER_VECTOR vector.h PATH_SUFFIXES EASTL)
if(NOT EASTL_HEADER_VECTOR)
	message(FATAL_ERROR "EASTL not found")
endif()
get_filename_component(EASTL_HEADER_DIR ${EASTL_HEADER_VECTOR} DIRECTORY)
get_filename_component(EASTL_HEADER_DIR ${EASTL_HEADER_DIR} DIRECTORY)

file(GLOB_RECURSE BVESTL_SOURCE LIST_DIRECTORIES false CONFIGURE_DEPENDS "src/*.cpp")
file(GLOB_RECURSE BVESTL_HEADERS LIST_DIRECTORIES false CONFIGURE_DEPENDS "include/*.hpp")

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${BVESTL_SOURCE} ${BVESTL_HEADERS})

add_library(bvestl SHARED ${BVESTL_SOURCE} ${BVESTL_HEADERS})
target_include_directories(bvestl INTERFACE ${EASTL_HEADER_DIR})
target_include_directories(bvestl PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>)

include(GNUInstallDirs)

install(
    TARGETS bvestl EXPORT bvestl-config
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}/
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}/
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/
)

install(
    EXPORT bvestl-config DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/bvestl
    NAMESPACE bvestl::
)

install(
    DIRECTORY ${CMAKE_SOURCE_DIR}/include/
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/
    FILES_MATCHING PATTERN "*.h*"
)
